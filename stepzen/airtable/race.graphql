type Race {
    id: ID!
    name: String!
    date: String
    type: String
	map: [Map]
		@materializer (query: "raceMap")
}

type Map {
	url: String
}

type Query {
    airtableRace(id: ID!): Race
        @rest(
            setters: [
                { field: "name", path: "fields.Name" }
                { field: "date", path: "fields.Date" }
                { field: "type", path: "fields.Type" }
            ]

            resultroot: ""
            endpoint: "https://api.airtable.com/v0/$baseid/races/$id"
            configuration: "airtable_config"
        )
    airtableRaces(eventSlug: String!): [Race]
        @rest(
            resultroot: "records[]"
            setters: [
                { field: "name", path: "fields.Name" }
                { field: "date", path: "fields.Date" }
                { field: "type", path: "fields.Type" }
            ]
            endpoint: "https://api.airtable.com/v0/$baseid/races?filterByFormula=AND(NOT%28%7BName%7D%20%3D%20%27%27%29,%7Bevent_slug%7D=%27$eventSlug%27)"
            configuration: "airtable_config"
        )
    raceMap(id: ID!): [Map]
        @rest(
            resultroot: "fields.Map[]"
            endpoint: "https://api.airtable.com/v0/$baseid/races/$id"
            configuration: "airtable_config"
        )
}
